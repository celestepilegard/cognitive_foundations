outlier.size=2,
notch=FALSE,
color="red",
fill="darkred")+
stat_summary(fun.data = mean_se,
geom="point", shape=23, size=5, fill="gold")+
scale_y_continuous (breaks=seq(0, 35, by=5),
limits = c(0,35))+
theme_classic(base_size=10)+
theme(strip.text = element_text(size=35, face="bold", color="white"),
strip.background = element_rect(fill="black"),
panel.background = element_rect(),
plot.title=element_text(face='bold', colour='black', size=35, hjust=.5),
axis.text.x=element_text(face='bold',colour='black',angle=0,vjust=.0,hjust=.5,size=35),
axis.text.y=element_text(face='bold',colour='black',angle=90,hjust=0, size=35),
axis.title.x=element_text(face='bold',colour='black',angle=0,hjust=.5, size=35, margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y=element_text(face='bold',colour='black',angle=90,vjust=.5, size=35))
# Chunk 36
data_wab_block_Novel %>%
group_by(Type) %>%
mutate(Type = recode(Type,"Expected" = "Imitator Helps",
"Unexpected"="Non-Imitator Helps")) %>%
ggplot(aes(Type,Looking_Time))+
labs(title = "Novel Block", x="Trial Type", y="Looking Time (Seconds)") +
geom_point(show.legend = FALSE, alpha = .9, size = 1.5)+
geom_line(aes(group = Subject.ID,stat="density"), alpha=0.25, size=1) +
geom_boxplot(outlier.colour="darkred",
outlier.shape=16, alpha=.5,
outlier.size=2,
notch=FALSE,
color="red",
fill="darkred")+
stat_summary(fun.data = mean_se,
geom="point", shape=23, size=5, fill="gold")+
scale_y_continuous (breaks=seq(0, 35, by=5),
limits = c(0,35))+
theme_classic(base_size=10)+
theme(strip.text = element_text(size=35, face="bold", color="white"),
strip.background = element_rect(fill="black"),
panel.background = element_rect(),
plot.title=element_text(face='bold', colour='black', size=35, hjust=.5),
axis.text.x=element_text(face='bold',colour='black',angle=0,vjust=.0,hjust=.5,size=35),
axis.text.y=element_text(face='bold',colour='black',angle=90,hjust=0, size=35),
axis.title.x=element_text(face='bold',colour='black',angle=0,hjust=.5, size=35, margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y=element_text(face='bold',colour='black',angle=90,vjust=.5, size=35))
#saving for print
novel_graph <- data_wab_block_Novel %>%
group_by(Type) %>%
mutate(Type = recode(Type,"Expected" = "Imitator Helps",
"Unexpected"="Non-Imitator Helps")) %>%
ggplot(aes(Type,Looking_Time))+
labs(title = "Novel Block", x="Trial Type", y="Looking Time (Seconds)") +
geom_point(show.legend = FALSE, alpha = .9, size = 1.5)+
geom_line(aes(group = Subject.ID,stat="density"), alpha=0.25, size=1) +
geom_boxplot(outlier.colour="darkred",
outlier.shape=16, alpha=.5,
outlier.size=2,
notch=FALSE,
color="red",
fill="darkred")+
stat_summary(fun.data = mean_se,
geom="point", shape=23, size=5, fill="gold")+
scale_y_continuous (breaks=seq(0, 35, by=5),
limits = c(0,35))+
theme_classic(base_size=10)+
theme(strip.text = element_text(size=35, face="bold", color="white"),
strip.background = element_rect(fill="black"),
panel.background = element_rect(),
plot.title=element_text(face='bold', colour='black', size=35, hjust=.5),
axis.text.x=element_text(face='bold',colour='black',angle=0,vjust=.0,hjust=.5,size=35),
axis.text.y=element_text(face='bold',colour='black',angle=90,hjust=0, size=35),
axis.title.x=element_text(face='bold',colour='black',angle=0,hjust=.5, size=35, margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y=element_text(face='bold',colour='black',angle=90,vjust=.5, size=35))
data_wab_block_Novel %>%
group_by(Type) %>%
mutate(Type = recode(Type,"Expected" = "Imitator Helps",
"Unexpected"="Non-Imitator Helps")) %>%
ggplot(aes(Type,Looking_Time))+
labs(title = "Novel Block", x="Trial Type", y="Looking Time (Seconds)") +
geom_point(show.legend = FALSE, alpha = .9, size = 1.5)+
geom_line(aes(group = Subject.ID,stat="density"), alpha=0.25, size=1) +
geom_boxplot(outlier.colour="darkred",
outlier.shape=16, alpha=.5,
outlier.size=2,
notch=FALSE,
color="red",
fill="darkred")+
stat_summary(fun.data = mean_se,
geom="point", shape=23, size=5, fill="gold")+
scale_y_continuous (breaks=seq(0, 50, by=5),
limits = c(0,50))+
facet_grid(~X1st.Test)+
theme_classic(base_size=10)+
theme(strip.text = element_text(size=35, face="bold", color="white"),
strip.background = element_rect(fill="black"),
panel.background = element_rect(),
plot.title=element_text(face='bold', colour='black', size=35, hjust=.5),
axis.text.x=element_text(face='bold',colour='black',angle=0,vjust=.0,hjust=.5,size=35),
axis.text.y=element_text(face='bold',colour='black',angle=90,hjust=0, size=35),
axis.title.x=element_text(face='bold',colour='black',angle=0,hjust=.5, size=35, margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y=element_text(face='bold',colour='black',angle=90,vjust=.5, size=35))
data_wab_block_Novel %>%
group_by(Type) %>%
mutate(Type = recode(Type,"Expected" = "Imitator Helps",
"Unexpected"="Non-Imitator Helps")) %>%
ggplot(aes(Type,Looking_Time))+
labs(title = "Novel Block", x="Trial Type", y="Looking Time (Seconds)") +
geom_point(show.legend = FALSE, alpha = .9, size = 1.5)+
geom_line(aes(group = Subject.ID,stat="density"), alpha=0.25, size=1) +
geom_violin(outlier.colour="darkred",
outlier.shape=16, alpha=.5,
outlier.size=2,
notch=FALSE,
color="red",
fill="darkred")+
stat_summary(fun.data = mean_se,
geom="point", shape=23, size=5, fill="gold")+
scale_y_continuous (breaks=seq(0, 35, by=5),
limits = c(0,35))+
theme_classic(base_size=10)+
theme(strip.text = element_text(size=35, face="bold", color="white"),
strip.background = element_rect(fill="black"),
panel.background = element_rect(),
plot.title=element_text(face='bold', colour='black', size=35, hjust=.5),
axis.text.x=element_text(face='bold',colour='black',angle=0,vjust=.0,hjust=.5,size=35),
axis.text.y=element_text(face='bold',colour='black',angle=90,hjust=0, size=35),
axis.title.x=element_text(face='bold',colour='black',angle=0,hjust=.5, size=35, margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y=element_text(face='bold',colour='black',angle=90,vjust=.5, size=35))
# Chunk 37
jpeg("Original_graph.jpeg", 800,800)
Original_graph
dev.off()
jpeg("novel_graph.jpeg", 800,800)
novel_graph
dev.off()
# Chunk 38
anova_Original <- summary(aov(Looking_Time ~ Type * Condition_byblock * X1st.Test + Error(Subject.ID/ (Type)), data_wab_block_Original))
anova_Original_log <- summary(aov(Looking_Time ~ Type * Condition_byblock * X1st.Test + Error(Subject.ID/ (Type)), data_wab_block_Original_logged))
anova_Novel_log <- summary(aov(Looking_Time ~ Type * Condition_byblock * X1st.Test + Error(Subject.ID/ (Type)), data_wab_block_Novel_logged))
anova_Novel <- summary(aov(Looking_Time ~ Type * Condition_byblock * X1st.Test + Error(Subject.ID/ (Type)), data_wab_block_Novel))
anova_Overall_log <- summary(aov(Looking_Time ~ Type * Condition * Condition_byblock * X1st.Test + Error(Subject.ID/(Type*Condition)), data_wab_block_logged))
# Chunk 39
anova_Original_log
anova_Novel_log
anova_Overall_log
#Original
anova_Original_log[["Error: Subject.ID:Type"]][[1]][["F value"]][1]
anova_Original_log[["Error: Subject.ID:Type"]][[1]][["Pr(>F)"]][1]
anova_Original_log[["Error: Subject.ID:Type"]][[1]][["Df"]]
#Novel
anova_Novel_log [["Error: Subject.ID:Type"]][[1]][["F value"]][1]
anova_Novel_log [["Error: Subject.ID:Type"]][[1]][["Pr(>F)"]][1]
anova_Novel_log [["Error: Subject.ID:Type"]][[1]][["Df"]]
#Overall
anova_Overall_log[["Error: Subject.ID:Type"]][[1]][["F value"]][1]
anova_Overall_log[["Error: Subject.ID:Type"]][[1]][["Pr(>F)"]][1]
anova_Overall_log[["Error: Subject.ID:Type"]][[1]][["Df"]]
anova_Overall_log[["Error: Subject.ID:Condition"]][[1]][["F value"]][1]
anova_Overall_log[["Error: Subject.ID:Condition"]][[1]][["Pr(>F)"]][1]
anova_Overall_log[["Error: Subject.ID:Condition"]][[1]][["Df"]]
anova_Overall_log[["Error: Subject.ID:Type:Condition"]][[1]][["F value"]][1]
anova_Overall_log[["Error: Subject.ID:Type:Condition"]][[1]][["Pr(>F)"]][1]
anova_Overall_log[["Error: Subject.ID:Type:Condition"]][[1]][["Df"]][1]
# Chunk 40
data_wab_fam <- data_wab_fam %>%
gather(key="Fam_Trial", value = "Looking_Time", Fam1:Fam6) %>%
convert_as_factor(Subject.ID, X1st.Test, TestB1)
data_wab_fam$Type <- as.factor(ifelse(data_wab_fam$X1st.Fam == "Imitator" & data_wab_fam$Fam_Trial == "Fam1", "Imitator",
ifelse(data_wab_fam$X1st.Fam == "Imitator" & data_wab_fam$Fam_Trial == "Fam2", "Non-Imitator",
ifelse(data_wab_fam$X1st.Fam == "Imitator" & data_wab_fam$Fam_Trial == "Fam3", "Imitator",
ifelse(data_wab_fam$X1st.Fam == "Imitator" & data_wab_fam$Fam_Trial == "Fam4", "Non-Imitator",
ifelse(data_wab_fam$X1st.Fam == "Imitator" & data_wab_fam$Fam_Trial == "Fam5", "Imitator",
ifelse(data_wab_fam$X1st.Fam == "Imitator" & data_wab_fam$Fam_Trial == "Fam6", "Non-Imitator",
ifelse(data_wab_fam$X1st.Fam == "Non-Imitator" & data_wab_fam$Fam_Trial == "Fam1", "Non-Imitator",
ifelse(data_wab_fam$X1st.Fam == "Non-Imitator" & data_wab_fam$Fam_Trial == "Fam2", "Imitator",
ifelse(data_wab_fam$X1st.Fam == "Non-Imitator" & data_wab_fam$Fam_Trial == "Fam3", "Non-Imitator",
ifelse(data_wab_fam$X1st.Fam == "Non-Imitator" & data_wab_fam$Fam_Trial == "Fam4", "Imitator",
ifelse(data_wab_fam$X1st.Fam == "Non-Imitator" & data_wab_fam$Fam_Trial == "Fam5", "Non-Imitator",
ifelse(data_wab_fam$X1st.Fam == "Non-Imitator" & data_wab_fam$Fam_Trial == "Fam6", "Imitator","Mistake")))))))))))))
levels(data_wab_fam$Type)
# Chunk 41
bad_subs_fam <- data_wab_fam %>%
count(Subject.ID, Type) %>%
filter(n == 0) %>%
pull(Subject.ID) %>%
unique()
data_wab_fam <- data_wab_fam %>%
filter(!(Subject.ID %in% bad_subs)) %>%
group_by(Subject.ID, Type) %>%
summarize(Looking_Time = mean(Looking_Time, na.rm=TRUE), .groups = "drop")
data_wab_fam$Type <- factor(data_wab_fam$Type, levels = rev(levels(data_wab_fam$Type)))
t.test(Looking_Time ~ Type, paired=TRUE, data_wab_fam)
data_wab_fam %>%
group_by(Type) %>%
summarise_at(vars(Looking_Time), funs(mean,sd))
# Chunk 42
data_WAB6_lm <- data_wab
# str(data_WAB6_lm)
# view(data_WAB6_lm)
data_WAB6_lm <- data_WAB6_lm %>%
mutate(Test_Trial = recode(Test_Trial,
"Test1.Datavyu." = "2",
"Test2.Datavyu." = "1.5",
"Test3.Datavyu." = "1",
"Test4.Datavyu." = ".5",
"Test5.Datavyu." = "-.5",
"Test6.Datavyu." = "-1",
"Test7.Datavyu." = "-1.5",
"Test8.Datavyu." = "-2"))
data_WAB6_lm <- data_WAB6_lm %>%
mutate(Type = recode(Type,
"Unexpected" = ".5",
"Expected" = "-.5"))
data_WAB6_lm <- data_WAB6_lm %>%
mutate(Condition = recode(Condition,
"Original" = ".5",
"Novel" = "-.5"))
data_WAB6_lm <- data_WAB6_lm %>%
mutate(Condition_byblock = recode(Condition_byblock,
"Novel1" = "Original2",
"Novel2" = "Original1",))
data_WAB6_lm <- data_WAB6_lm %>%
mutate(Condition_byblock = recode(Condition_byblock,
"Original1" = "-.5",
"Original2" = ".5"))
data_WAB6_lm$Test_Trial <- as.numeric(data_WAB6_lm$Test_Trial)
data_WAB6_lm$Type <- as.character(data_WAB6_lm$Type)
data_WAB6_lm$Type <- as.numeric(data_WAB6_lm$Type)
data_WAB6_lm$Condition <- as.character(data_WAB6_lm$Condition)
data_WAB6_lm$Condition <- as.numeric(data_WAB6_lm$Condition)
data_WAB6_lm$Condition_byblock <- as.character(data_WAB6_lm$Condition_byblock)
data_WAB6_lm$Condition_byblock <- as.numeric(data_WAB6_lm$Condition_byblock)
# str(data_WAB6_lm)
# view(data_WAB6_lm)
data_WAB6_logged_ME <- data_WAB6_lm %>%
mutate(Looking_Time=log10(Looking_Time))
# Chunk 43
ME.lm <-lmer(Looking_Time ~ Type + Condition + Test_Trial + Type:Condition + Condition:Test_Trial + Type:Test_Trial+ Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_lm, REML=FALSE)
summary(ME.lm)
# Chunk 44
data_wab_block %>%
group_by(Type) %>%
summarise_at(vars(Looking_Time), funs(mean,sd))
data_wab_block %>%
group_by(Condition) %>%
summarise_at(vars(Looking_Time), funs(mean,sd))
# Chunk 45
ME.lm.logged <- lmer(Looking_Time ~ Type + Condition + Test_Trial + Type:Condition + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
summary(ME.lm.logged)
confint(ME.lm.logged, level = 0.95)
# Chunk 46
ME.lm.comp <- lmer(Looking_Time ~ 1 + Condition + Test_Trial + Type:Condition + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
# Chunk 47
anova(ME.lm.comp,ME.lm.logged,test='Chisq')
# Chunk 48
ME.lm.logged2 <- lmer(Looking_Time ~ Type + Condition + Test_Trial + Type:Condition + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
# Chunk 49
ME.lm.comp2 <- lmer(Looking_Time ~ Type + Condition + Test_Trial + 1 + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
# Chunk 50
anova(ME.lm.comp2,ME.lm.logged2,test='Chisq')
# Chunk 51
ME.lm.logged3 <- lmer(Looking_Time ~ Type + Condition + Test_Trial + Type:Condition + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
#model for comparision (without condition)
ME.lm.comp3 <- lmer(Looking_Time ~ Type + 1 + Test_Trial + Type:Condition + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
anova(ME.lm.comp3,ME.lm.logged3,test='Chisq')
# Chunk 52
ME.lm.logged4 <- lmer(Looking_Time ~ Type + Condition + Test_Trial + Type:Condition + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
#model for comparision
ME.lm.comp4 <- lmer(Looking_Time ~ Type + Condition + 1 + Type:Condition + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
anova(ME.lm.comp4,ME.lm.logged4,test='Chisq')
# Chunk 53
ME.lm.logged7 <- lmer(Looking_Time ~ Type + Condition + Test_Trial + Type:Condition + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
#model for comparision
ME.lm.comp7 <- lmer(Looking_Time ~ Type + Condition + Test_Trial + Type:Condition + Type:Test_Trial + 1 + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
anova(ME.lm.comp7,ME.lm.logged7,test='Chisq')
# Chunk 54
ME.lm.logged6 <- lmer(Looking_Time ~ Type + Condition + Test_Trial + Type:Condition + Type:Test_Trial + Condition:Test_Trial + Type:Condition:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
#model for comparision
ME.lm.comp6 <- lmer(Looking_Time ~ Type + Condition + Test_Trial + Type:Condition + Type:Test_Trial + Condition:Test_Trial + 1 + (1|Subject.ID), data=data_WAB6_logged_ME, REML=FALSE)
anova(ME.lm.comp6,ME.lm.logged6,test='Chisq')
# Chunk 55
data_WAB6_logged_ME_original <- data_WAB6_logged_ME %>%
filter(Condition == .5)
#type for Original
ME.lm.logged_original <- lmer(Looking_Time ~ Type + Test_Trial + Condition_byblock + Type:Test_Trial + Type:Condition_byblock + Type:Test_Trial:Condition_byblock + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
ME.lm.comp_original <- lmer(Looking_Time ~ 1 + Test_Trial + Condition_byblock + Type:Test_Trial + Type:Condition_byblock + Type:Test_Trial:Condition_byblock + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original,ME.lm.logged_original,test='Chisq')
#summary for Original
summary(ME.lm.logged_original)
#Test_Trial for Original
ME.lm.comp_original_testtrial <- lmer(Looking_Time ~ Type + 1 + Type:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original_testtrial,ME.lm.logged_original,test='Chisq')
#Test_Trial:Type for Original
ME.lm.comp_original_interaction <- lmer(Looking_Time ~ Type + Test_Trial + 1 + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original_interaction,ME.lm.logged_original,test='Chisq')
# Chunk 56
data_WAB6_logged_ME_novel <- data_WAB6_logged_ME %>%
filter(Condition == -.5)
#type for novel
ME.lm.logged_novel <- lmer(Looking_Time ~ Type + Test_Trial + Type:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME_novel, REML=FALSE)
ME.lm.comp_novel <- lmer(Looking_Time ~ 1 + Test_Trial + Type:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME_novel, REML=FALSE)
anova(ME.lm.comp_novel,ME.lm.logged_novel,test='Chisq')
#summary for novel
summary(ME.lm.logged_novel)
#Test_Trial for novel
ME.lm.comp_novel_testtrial <- lmer(Looking_Time ~ Type + 1 + Type:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME_novel, REML=FALSE)
anova(ME.lm.comp_novel_testtrial,ME.lm.logged_novel,test='Chisq')
#Test_Trial:Type for novel
ME.lm.comp_novel_interaction <- lmer(Looking_Time ~ Type + Test_Trial + 1 + (1|Subject.ID), data=data_WAB6_logged_ME_novel, REML=FALSE)
anova(ME.lm.comp_novel_interaction,ME.lm.logged_novel,test='Chisq')
# Chunk 57
data_WAB6_rel <- read.csv("WAB6_data.csv",
header=TRUE)
# Chunk 58
rel_data <- data_WAB6_rel %>%
filter(Exclude == "") %>%
gather(key="Rel_Trial", value = "Rel_Time", Rel_Test1.Datavyu., Rel_Test2.Datavyu., Rel_Test3.Datavyu., Rel_Test4.Datavyu., Rel_Test5.Datavyu., Rel_Test6.Datavyu., Rel_Test7.Datavyu., Rel_Test8.Datavyu.)
# Chunk 59
rel_data <- rel_data %>%
select(Subject.ID, Rel_Trial, Rel_Time) %>%
arrange(Subject.ID)
rel_data2 <- data_wab %>%
select(Subject.ID, Test_Trial, Looking_Time) %>%
arrange(Subject.ID)
rel_com <- cbind(rel_data, rel_data2)
# Chunk 60
rel_com <- rel_com %>%
drop_na(Rel_Time) %>%
drop_na(Looking_Time)
# Chunk 61
library(psych)
# Chunk 62
duplicated_names <- duplicated(colnames(rel_com))
rel_com <- rel_com[!duplicated_names]
rel_com <- select(rel_com, Subject.ID, Looking_Time, Rel_Time)
rel_com <- rel_com %>%
filter(Rel_Time != "")
rel_com$Looking_Time <- as.numeric(rel_com$Looking_Time)
rel_com$Rel_Time <- as.numeric(rel_com$Rel_Time)
rel_com <- rel_com %>%
select(-Subject.ID)
ICC_coeff <- ICC(rel_com)
print(ICC_coeff)
# Chunk 63
data_WAB_age <- read.csv("WAB6_data.csv",
header=TRUE)
data_WAB_age <- data_WAB_age %>%
filter(Exclude == "") %>%
select(Subject.ID,Age.Months,Sex)
data_WAB_age %>%
count(Sex)
mean_age_combined <- mean(data_WAB_age$Age.Months)
SD_age_combined <- sd(data_WAB_age$Age.Months)
mean_age_combined
SD_age_combined
# Chunk 64
data_WAB6_demo<- read.csv("WAB6_demo.csv",
header=TRUE)
# Chunk 65
data_WAB6_demo$Q6 <- as.numeric(data_WAB6_demo$Q6)
data_WAB6_demo %>%
drop_na(Q6) %>%
summarise_at(vars(Q6), funs(mean,sd))
screen_table <- data_WAB6_demo %>%
drop_na(Q6) %>%
count(Q6) %>%
arrange(desc(n))
screen_range <- max(as.numeric(screen_table$Q6)) - min(as.numeric(screen_table$Q6))
screen_range
# Chunk 66
race_table <- data_WAB6_demo %>%
count(Q19.1) %>%
arrange(desc(n))
# Chunk 67
ethnicity_table <- data_WAB6_demo %>%
count(Q20) %>%
arrange(desc(n))
# Chunk 68
education_table_p1 <- data_WAB6_demo %>%
filter(Q22 == "College Degree or Higher") %>%
count(Q22) %>%
arrange(desc(n))
p1 <- education_table_p1[1,2]
education_table_p2 <- data_WAB6_demo %>%
filter(Q22 != "College Degree or Higher") %>%
filter(Q24 == "College Degree or Higher") %>%
count(Q24) %>%
arrange(desc(n))
p2 <- education_table_p2[1,2]
collegeorhigher_parents <- p1 + p2
collegeorhigher_parents
# Chunk 69
#for Bayes ANOVA interaction
adata_wab_block_logged_jasp <- data_wab_block_logged %>%
pivot_wider(names_from = c("Type", "Condition"), values_from = "Looking_Time")
#for Bayes One sample t test
a2data_wab_block_jasp <- data_wab_block_Novel %>%
pivot_wider(names_from = c("Type", "Condition"), values_from = "Looking_Time")
a2data_wab_block_jasp <- a2data_wab_block_jasp %>%
mutate(Prop_looking = ((Unexpected_Novel-Expected_Novel)/(Expected_Novel+Unexpected_Novel)))
# Chunk 70
#exporting for jasp
write.csv(adata_wab_block_logged_jasp, file="/Users/billpepe/Documents/UCSD Work Docs/R Code/WAB6/wab6_jasp.csv")
write.csv(a2data_wab_block_jasp, file="/Users/billpepe/Documents/UCSD Work Docs/R Code/WAB6/wab6_jasp_ttest.csv")
# Chunk 71
data_wab_block_Novel_logged_unexp1st <- data_wab_block_Novel_logged %>%
filter(X1st.Test == "Unexpected")
t.test(Looking_Time ~ Type, paired=TRUE, data_wab_block_Novel_logged_unexp1st)
data_wab_block_Novel_logged_exp1st <- data_wab_block_Novel_logged %>%
filter(X1st.Test == "Expected")
t.test(Looking_Time ~ Type, paired=TRUE, data_wab_block_Novel_logged_exp1st)
data_wab_block_Original_logged_unexp1st <- data_wab_block_Original_logged %>%
filter(X1st.Test == "Unexpected")
t.test(Looking_Time ~ Type, paired=TRUE, data_wab_block_Original_logged_unexp1st)
data_wab_block_Original_logged_exp1st <- data_wab_block_Original_logged %>%
filter(X1st.Test == "Expected")
t.test(Looking_Time ~ Type, paired=TRUE, data_wab_block_Original_logged_exp1st)
# Chunk 72
anova_Overall_log
etasquared_overall <- anova_Overall_log[["Error: Subject.ID:Type:Condition"]][[1]][["Sum Sq"]][1]/(anova_Overall_log[["Error: Subject.ID:Type:Condition"]][[1]][["Sum Sq"]][1]+anova_Overall_log[["Error: Subject.ID:Type:Condition"]][[1]][["Sum Sq"]][2]+anova_Overall_log[["Error: Subject.ID:Type:Condition"]][[1]][["Sum Sq"]][3]+anova_Overall_log[["Error: Subject.ID:Type:Condition"]][[1]][["Sum Sq"]][4]+anova_Overall_log[["Error: Subject.ID:Type:Condition"]][[1]][["Sum Sq"]][5])
etasquared_overall
#summary for Original
summary(ME.lm.logged_original)
View(data_WAB6_logged_ME_original)
#type for Original
ME.lm.logged_original <- lmer(Looking_Time ~ Type + Test_Trial + Condition_byblock + Type:Test_Trial + Type:Condition_byblock + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
ME.lm.comp_original <- lmer(Looking_Time ~ 1 + Test_Trial + Condition_byblock + Type:Test_Trial + Type:Condition_byblock + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original,ME.lm.logged_original,test='Chisq')
#summary for Original
summary(ME.lm.logged_original)
#type for Original
ME.lm.logged_original <- lmer(Looking_Time ~ Type + Test_Trial + Condition_byblock + Type:Test_Trial + Type:Condition_byblock + Type:Test_Trial:Condition_byblock + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
ME.lm.comp_original <- lmer(Looking_Time ~ 1 + Test_Trial + Condition_byblock + Type:Test_Trial + Type:Condition_byblock + Type:Test_Trial:Condition_byblock + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original,ME.lm.logged_original,test='Chisq')
#summary for Original
summary(ME.lm.logged_original)
#Test_Trial for Original
ME.lm.comp_original_testtrial <- lmer(Looking_Time ~ Type + 1 + Type:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original,ME.lm.logged_original,test='Chisq')
View(ME.lm.logged_original)
View(ME.lm.logged_original)
View(ME.lm.logged_original)
View(data_WAB6_logged_ME_original)
data_WAB6_lm <- data_WAB6_lm %>%
mutate(TestB1 = recode(TestB1,
"Original" = ".5",
"Novel" = "-.5"))
data_WAB6_lm$TestB1 <- as.character(data_WAB6_lm$TestB1)
data_WAB6_lm$TestB1 <- as.numeric(data_WAB6_lm$TestB1)
data_WAB6_logged_ME <- data_WAB6_lm %>%
mutate(Looking_Time=log10(Looking_Time))
data_WAB6_logged_ME_original <- data_WAB6_logged_ME %>%
filter(Condition == .5)
#type for Original
ME.lm.logged_original <- lmer(Looking_Time ~ Type + Test_Trial + TestB1 + Type:Test_Trial + Type:TestB1 + Type:Test_Trial:TestB1 + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
ME.lm.comp_original <- lmer(Looking_Time ~ 1 + Test_Trial + TestB1 + Type:Test_Trial + Type:TestB1 + Type:Test_Trial:TestB1 + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original,ME.lm.logged_original,test='Chisq')
#summary for Original
summary(ME.lm.logged_original)
#Test_Trial for Original
ME.lm.comp_original_testtrial <- lmer(Looking_Time ~ Type + 1 + Type:Test_Trial + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original_testtrial,ME.lm.logged_original,test='Chisq')
#type for Original
ME.lm.logged_original <- lmer(Looking_Time ~ Type + Test_Trial + TestB1 + Type:Test_Trial + Type:TestB1 + Type:Test_Trial:TestB1 + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
ME.lm.comp_original <- lmer(Looking_Time ~ Type + Test_Trial + 1 + Type:Test_Trial + Type:TestB1 + Type:Test_Trial:TestB1 + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original,ME.lm.logged_original,test='Chisq')
#type for Original
ME.lm.logged_original <- lmer(Looking_Time ~ Type + Test_Trial + TestB1 + Type:Test_Trial + Type:TestB1 + Type:Test_Trial:TestB1 + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
ME.lm.comp_original <- lmer(Looking_Time ~ Type + Test_Trial + TestB1 + Type:Test_Trial + Type:TestB1 + 1 + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original,ME.lm.logged_original,test='Chisq')
#type for Original
ME.lm.logged_original <- lmer(Looking_Time ~ Type + Test_Trial + TestB1 + Type:Test_Trial + Type:TestB1 + Type:Test_Trial:TestB1 + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
ME.lm.comp_original <- lmer(Looking_Time ~ 1 + Test_Trial + TestB1 + Type:Test_Trial + Type:TestB1 + Type:Test_Trial:TestB1 + (1|Subject.ID), data=data_WAB6_logged_ME_original, REML=FALSE)
anova(ME.lm.comp_original,ME.lm.logged_original,test='Chisq')
# Chunk 1: penguins
knitr::include_graphics("images/ch7/cover-penguins.jpeg")
# Chunk 2: truck
knitr::include_graphics("images/ch7/truck.jpg")
# Chunk 3: dog
knitr::include_graphics("images/ch7/dog.jpg")
# Chunk 4: bird
knitr::include_graphics("images/ch7/bird.jpg")
# Chunk 5: lizard
knitr::include_graphics("images/ch7/lizard.jpg")
# Chunk 6: network
knitr::include_graphics("images/ch7/fig5.png")
library(xfun)
bookdown:::serve_book()
install.packages("bookdown")
library(bookdown)
bookdown:::serve_book()
install.packages("server")
library(tidyr)
install.packages("miniui")
install.packages("miniUI"")
library(miniUI)
library("miniUI")
bookdown:::serve_book()
library(xfun)
bookdown:::serve_book()
library(tidyverse)
library(tidyselect)
library(shiny)
install.packages("servr")
library(servr)
bookdown:::serve_book()
bookdown:::serve_book()
library(xfun)
library(tidyr)
library(servr)
bookdown:::serve_book()
bookdown:::serve_book()
