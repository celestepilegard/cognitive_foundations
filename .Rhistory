#   drop_na() %>%
#   summarise(learning = mean(mean))%>%
#   filter(trial == 2) %>%
#   mutate(trials = as.factor("15seq"), breaks = as.factor("10s")) %>%
#   mutate(seqComp = if_else(seqComp == 2, "first", "last"))
#
# onlineLearningS10 <- brS10RT %>%
#   filter(keyCorrect == 1) %>%
#   filter(seqComp != 1) %>%
#   mutate(logRT = log10(RT)) %>%
#   group_by(ID, trial, seqComp) %>%
#   summarize(logMean = mean(logRT)) %>%
#   mutate(mean = 10^logMean) %>%
#   group_by(trial, seqComp) %>%
#   mutate(trial = as.factor(trial)) %>%
#   filter(trial !=  1) %>%
#   group_by(trial) %>%
#   filter(seqComp != 1) %>%
#   group_by(ID) %>%
#   group_by(seqComp, ID, trial) %>%
#   drop_na() %>%
#   summarise(learning = mean(mean))%>%
#   filter(trial == 2) %>%
#   mutate(trials = as.factor("5seq"), breaks = as.factor("10s")) #%>%
#   #mutate(seqComp = if_else(seqComp == 2, "first", "last"))
#
# onlineLearning <- rbind(onlineLearningM30, onlineLearningS30, onlineLearningM10, onlineLearningS10)
# onlineANOVA <- (aov(learning ~ seqComp * trials * breaks, data = onlineLearning))
# summary(onlineANOVA)
# eta_squared(onlineANOVA, partial = T, generalized = F)
#
# onlineLearning5Seq <- rbind(onlineLearningS30, onlineLearningS10)
# onlineANOVA5Seq <- (aov(learning ~ as.factor(seqComp), data = onlineLearning5Seq))
# summary(onlineANOVA5Seq)
# eta_squared(onlineANOVA5Seq, partial = T, generalized = F)
#
# onlineLearning5Seq %>%
#   group_by(seqComp) %>%
#   summarise(mean = mean(learning))%>%
#   ggplot(aes(y = mean, x = seqComp)) +
#   geom_bar(color = "black", stat="identity",size = 0.8, position=position_dodge()) +
#   ggtitle("Online Learning") +
#   xlab("Sequence") +
#   ylab("RT") +
#   # scale_fill_grey(start = 0, end = .9)+
#   # scale_fill_brewer(palette="Blues")+
#   theme_bw() +
#   theme( text = element_text(size=14), panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
#
#
# # regression
# sSeq <- rbind(brS30seqRT,brS10seqRT)
# sSeq <- sSeq %>%
#   filter(seqComp > 1) %>%
#   filter(as.numeric(trial) < 5)
# mSeq <- rbind(brM30seqRT, brM10seqRT)
# mSeq <- mSeq %>%
#   filter(seqComp > 1) %>%
#   filter(as.numeric(trial) == 2)
# summary(lm(meanRT ~ seqComp, data = mSeq))
# summary(lm(meanRT ~ seqComp, data = sSeq))
#
# mSeq %>% ggplot(aes(x=seqComp, y = meanRT)) +
#   geom_point() +
#   stat_smooth(method = "lm")
#
# # ANOVA between before and after retention interval
# prePostAOV <- (aov(diff ~ trials * breaks, data = fullBar))
# summary(prePostAOV)
# eta_squared(prePostAOV, partial = T, generalized = F)
# # since no sig interaction no post-hoc necessary
# #TukeyHSD(prePostAOV)
# ANOVA to see differences after the retention interval (i.e. are the RTs better for one group than another)
# averaging over all trials
brM10PostANOVA <- brM10RT %>%
filter(trial > 13) %>%
filter(keyCorrect == 1) %>%
filter(seqComp != 1) %>%
mutate(logRT = log10(RT)) %>%
group_by(ID, trial, seqComp) %>%
summarize(logMean = mean(logRT)) %>%
mutate(mean = 10^logMean) %>%
group_by(trial, ID) %>%
mutate(trial = as.factor(trial)) %>%
filter(trial !=  1) %>%
group_by(ID) %>%
summarize(meanRT = mean(mean)) %>%
mutate(trials = as.factor("15seq"), breaks = as.factor("10s"))
brM30PostANOVA <- brM30RT %>%
filter(trial > 13) %>%
filter(keyCorrect == 1) %>%
filter(seqComp != 1) %>%
mutate(logRT = log10(RT)) %>%
group_by(ID, trial, seqComp) %>%
summarize(logMean = mean(logRT)) %>%
mutate(mean = 10^logMean) %>%
group_by(trial, ID) %>%
mutate(trial = as.factor(trial)) %>%
filter(trial !=  1) %>%
group_by(ID) %>%
summarize(meanRT = mean(mean)) %>%
mutate(trials = as.factor("15seq"), breaks = as.factor("30s"))
brS10PostANOVA <- brS10RT %>%
filter(keyCorrect == 1) %>%
filter(trial > 37) %>%
filter(seqComp != 1) %>%
mutate(logRT = log10(RT)) %>%
group_by(ID, trial, seqComp) %>%
summarize(logMean = mean(logRT)) %>%
mutate(mean = 10^logMean) %>%
group_by(trial, ID) %>%
mutate(trial = as.factor(trial)) %>%
filter(trial !=  1) %>%
group_by(ID) %>%
summarize(meanRT = mean(mean)) %>%
mutate(trials = as.factor("5seq"), breaks = as.factor("10s"))
brS30PostANOVA <- brS30RT %>%
filter(keyCorrect == 1) %>%
filter(trial > 37) %>%
filter(seqComp != 1) %>%
mutate(logRT = log10(RT)) %>%
group_by(ID, trial, seqComp) %>%
summarize(logMean = mean(logRT)) %>%
mutate(mean = 10^logMean) %>%
group_by(trial, ID) %>%
mutate(trial = as.factor(trial)) %>%
filter(trial !=  1) %>%
group_by(ID) %>%
summarize(meanRT = mean(mean)) %>%
mutate(trials = as.factor("5seq"), breaks = as.factor("30s"))
brAllPostANOVA <- as.data.frame(rbind(brM10PostANOVA, brM30PostANOVA, brS10PostANOVA, brS30PostANOVA))
PostAOV <- (aov(meanRT ~ trials * breaks, data = brAllPostANOVA))
summary(PostAOV)
eta_squared(PostAOV, partial = T, generalized = F)
# look at error rates over trials
# get error rates for each trial for each participant
brM10ErrorRates <- brM10RT %>%
filter(trial != 1) %>%
filter(seqComp !=1) %>%
group_by(ID, trial) %>%
mutate(NKeyPresses = n()) %>%
summarise(errorRate = mean((NKeyPresses-sum(keyCorrect))/NKeyPresses))
brM10ErrorRates$breaks <- "10s"
brM10ErrorRates$trials <- "15seq"
brM30ErrorRates <- brM30RT %>%
filter(trial != 1) %>%
filter(seqComp !=1) %>%
group_by(ID, trial) %>%
mutate(NKeyPresses = n()) %>%
summarise(errorRate = mean((NKeyPresses-sum(keyCorrect))/NKeyPresses))
brM30ErrorRates$breaks <- "30s"
brM30ErrorRates$trials <- "15seq"
brS10ErrorRates <- brS10RT %>%
filter(trial != 1) %>%
filter(seqComp !=1) %>%
group_by(ID, trial) %>%
mutate(NKeyPresses = n()) %>%
summarise(errorRate = mean((NKeyPresses-sum(keyCorrect))/NKeyPresses))
brS10ErrorRates$breaks <- "10s"
brS10ErrorRates$trials <- "5seq"
brS30ErrorRates <- brS30RT %>%
filter(trial != 1) %>%
filter(seqComp !=1) %>%
group_by(ID, trial) %>%
mutate(NKeyPresses = n()) %>%
summarise(errorRate = mean((NKeyPresses-sum(keyCorrect))/NKeyPresses))
brS30ErrorRates$breaks <- "30s"
brS30ErrorRates$trials <- "5seq"
brErrorRates <- rbind(brM10ErrorRates, brM30ErrorRates,
brS10ErrorRates, brS30ErrorRates)
# errorRestAOV <- (aov(errorRate ~ trials * breaks, data = brErrorRates))
# summary(errorRestAOV)
# eta_squared(errorRestAOV, partial = T, generalized = F)
brErrorRates %>%
group_by(trial, trials, breaks) %>%
summarise(meanErrorRate = mean(errorRate)) %>%
filter(trials=="5seq") %>%
ggplot( aes(y=meanErrorRate, x= trial, color = as.factor(breaks))) +
geom_point() +
geom_line() +
xlab("Trial") +
ylab("Error Rate") +
ggtitle("Error Rates 5 Seq") +
theme_minimal() +
theme(axis.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"))+
geom_vline(xintercept = 38, color = "black", linetype = "dotted", size = 0.8)
brErrorRates %>%
group_by(trial, trials, breaks) %>%
summarise(meanErrorRate = mean(errorRate)) %>%
filter(trials=="15seq") %>%
ggplot( aes(y=meanErrorRate, x= trial, color = as.factor(breaks))) +
geom_point() +
geom_line() +
xlab("Trial") +
ylab("Error Rate") +
ggtitle("Error Rates 15 Seq") +
theme_minimal() +
theme(axis.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"))+
geom_vline(xintercept = 14, color = "black", linetype = "dotted", size = 0.8)
# look at error rates over sequences
# get error rates for each trial for each participant
# Need to add 0 for seq 0 for those that didn't have errors
brM10ErrorRatesSeq <- brM10RT %>%
filter(trial != 1) %>%
filter(trial < 14) %>%
filter(seqComp != 15) %>%
group_by(ID, seqComp) %>%
mutate(NKeyPresses = n()) %>%
summarise(errorAvg = mean(NKeyPresses-sum(keyCorrect))/12)
brM10ErrorRatesSeq$breaks <- "10s"
brM10ErrorRatesSeq$trials <- "15seq"
brM30ErrorRatesSeq <- brM30RT %>%
filter(trial != 1) %>%
filter(trial < 14) %>%
filter(seqComp != 15) %>%
group_by(ID, seqComp) %>%
mutate(NKeyPresses = n()) %>%
summarise(errorAvg = mean(NKeyPresses-sum(keyCorrect))/12)
brM30ErrorRatesSeq$breaks <- "30s"
brM30ErrorRatesSeq$trials <- "15seq"
brS10ErrorRatesSeq <- brS10RT %>%
filter(trial != 1) %>%
filter(trial < 38) %>%
filter(seqComp != 5) %>%
group_by(ID, seqComp) %>%
mutate(NKeyPresses = n()) %>%
summarise(errorAvg = mean(NKeyPresses-sum(keyCorrect))/36)
test <- brS10ErrorRatesSeq %>%
ungroup() %>%
mutate(index = 1:n()) %>%
group_by(ID) %>%
mutate(count = n()) %>%
mutate(indexL = ifelse(lag(count) > count, index, 0))
# get indexes
test$indexL <- ifelse(is.na(test$indexL), test$index, test$indexL)
# remove first row & zeros to get vec of all indexes
indexL <- if(length(which(test$indexL==0)!=0)) test$indexL[-which(test$indexL==0)]
indexL <- indexL[-c(1)]
# insert 0s at these indexes
brS10ErrorRatesSeq$breaks <- "10s"
brS10ErrorRatesSeq$trials <- "5seq"
brS30ErrorRatesSeq <- brS30RT %>%
filter(trial != 1) %>%
filter(trial < 38) %>%
filter(seqComp != 5) %>%
group_by(ID, seqComp) %>%
mutate(NKeyPresses = n()) %>%
summarise(errorAvg = mean(NKeyPresses-sum(keyCorrect))/36)
brS30ErrorRatesSeq$breaks <- "30s"
brS30ErrorRatesSeq$trials <- "5seq"
brErrorRatesSeq <- rbind(brM10ErrorRatesSeq, brM30ErrorRatesSeq,
brS10ErrorRatesSeq, brS30ErrorRatesSeq)
# errorRestAOV <- (aov(errorRate ~ trials * breaks, data = brErrorRates))
# summary(errorRestAOV)
# eta_squared(errorRestAOV, partial = T, generalized = F)
brErrorRatesSeq %>%
group_by(seqComp, trials, breaks) %>%
summarise(meanErrorRate = mean(errorAvg)) %>%
filter(trials=="5seq") %>%
ggplot( aes(y=meanErrorRate, x= seqComp, color = as.factor(breaks))) +
geom_point() +
geom_line() +
xlab("Sequence") +
ylab("Number of Error Keypresses After Sequence") +
ggtitle("Error Key Presses 5 Seq") +
theme_minimal() +
theme(axis.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"))
brErrorRatesSeq %>%
group_by(seqComp, trials, breaks) %>%
summarise(meanErrorRate = mean(errorAvg)) %>%
filter(trials=="15seq") %>%
ggplot( aes(y=meanErrorRate, x= seqComp, color = as.factor(breaks))) +
geom_point() +
geom_line() +
xlab("Sequence") +
ylab("Number of Error Keypresses After Sequence") +
ggtitle("Error Key Presses 15 Seq") +
theme_minimal() +
theme(axis.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"))
test <- brM10RT %>%
filter(trial != 1) %>%
filter(trial < 14) %>%
filter(seqComp > 1) %>%
group_by(ID, seqComp) %>%
mutate(NKeyPresses = n()) %>%
summarise(RTAvg = mean(RT), NKeyPressesA= median(NKeyPresses-sum(keyCorrect)))
test$breaks <- "10s"
test$trials <- "15seq"
test %>%
group_by(seqComp, trials) %>%
summarise(meanErrorRate = mean(RTAvg), NKeyPressesAA= median(NKeyPressesA)) %>%
filter(trials=="15seq") %>%
ggplot( aes(y=meanErrorRate, x= seqComp)) +
geom_point(aes(size = NKeyPressesAA)) +
geom_line() +
xlab("Sequence") +
ylab("RT All KeyPresses") +
ggtitle("RT 15 Seq") +
theme_minimal() +
theme(axis.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"))
# want to find stabilised stratgies
# Look at the last 6 trials for space & last 2 trials for mass
# Combine data within groups
# Average over trial and plot each participant for each group
# o	Average hypothesis
# 	Switch 1 & 2 grouped and 3 & 4 grouped where 5 (transition to next sequence) is on its own
# o	Reformat the structure
# 	The has become chunked in a different way where instead of 41324 it becomes 441-32
# •	Thus 5, 1, 2 are grouped and 3 & 4 are grouped
# 	Could also be 41-324
# •	Thus 1 & 2 and 3, 4, 5
# 	44-132
# •	5 & 1 and 2, 3, 4
# each key has same RT (null)
# find keypress changes - code 1-5(4-1, 1-3, 3-2, 2-4, 4-4)
brS30RT$keyPress <- brS30KeyPress
brS30LearnRT <- brS30RT %>%
filter(keyCorrect == 1) %>%
filter(trial > 31) %>%
filter(trial < 38) %>%
mutate(keySwitch = ifelse(lag(keyPress) == "4" & keyPress=="1", 1,
ifelse(lag(keyPress) == "1", 2,
ifelse(lag(keyPress) == "3", 3,
ifelse(lag(keyPress) == "2", 4,
ifelse(lag(keyPress) == "4" & keyPress=="4", 5,
NA)))))) %>%
filter(!is.na(keySwitch)) %>%
group_by(ID, keySwitch) %>%
summarize(meanRT = mean(RT))
brS10RT$keyPress <- brS10KeyPress
brS10LearnRT <- brS10RT %>%
filter(keyCorrect == 1) %>%
filter(trial > 31) %>%
filter(trial < 38) %>%
mutate(keySwitch = ifelse(lag(keyPress) == "4" & keyPress=="1", 1,
ifelse(lag(keyPress) == "1", 2,
ifelse(lag(keyPress) == "3", 3,
ifelse(lag(keyPress) == "2", 4,
ifelse(lag(keyPress) == "4" & keyPress=="4", 5,
NA)))))) %>%
filter(!is.na(keySwitch)) %>%
group_by(ID, keySwitch) %>%
summarize(meanRT = mean(RT))
brM30LearnRT <- brM30RT %>%
filter(keyCorrect == 1) %>%
filter(trial != 1) %>%
filter(trial > 11) %>%
filter(trial < 14) %>%
mutate(keySwitch = ifelse(lag(keyPress) == "4" & keyPress=="1", 1,
ifelse(lag(keyPress) == "1", 2,
ifelse(lag(keyPress) == "3", 3,
ifelse(lag(keyPress) == "2", 4,
ifelse(lag(keyPress) == "4" & keyPress=="4", 5,
NA)))))) %>%
filter(!is.na(keySwitch)) %>%
group_by(ID, keySwitch) %>%
summarize(meanRT = mean(RT))
brM10LearnRT <- brM10RT %>%
filter(keyCorrect == 1) %>%
filter(trial != 1) %>%
filter(trial > 11) %>%
filter(trial < 14) %>%
mutate(keySwitch = ifelse(lag(keyPress) == "4" & keyPress=="1", 1,
ifelse(lag(keyPress) == "1", 2,
ifelse(lag(keyPress) == "3", 3,
ifelse(lag(keyPress) == "2", 4,
ifelse(lag(keyPress) == "4" & keyPress=="4", 5,
NA)))))) %>%
filter(!is.na(keySwitch)) %>%
group_by(ID, keySwitch) %>%
summarize(meanRT = mean(RT))
# combine dfs
brSLearnRT <- rbind(brS10LearnRT, brS30LearnRT)
brMLearnRT <- rbind(brM10LearnRT, brM30LearnRT)
brMLearnRT %>%
ggplot( aes(y = meanRT, x = keySwitch, color = as.factor(ID))) +
geom_point() +
geom_line() +
xlab("Key Transition") +
ylab("Reaction Time / keypress (ms)") +
ggtitle("15 Seq Inter-keypress Average Reaction Time") +
theme_minimal() +
ylim(0,1500) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
legend.position="none")
brSLearnRT %>%
ggplot( aes(y = meanRT, x = keySwitch, color = as.factor(ID))) +
geom_point() +
geom_line() +
xlab("Key Transition") +
ylab("Reaction Time / keypress (ms)") +
ggtitle("5 Seq Inter-keypress Average Reaction Time") +
theme_minimal() +
ylim(0,1500) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
legend.position="none")
# k-means
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
# space
brSLearnRTWide <- brSLearnRT %>%
pivot_wider(names_from = keySwitch, values_from = meanRT) %>%
magrittr::set_rownames(.$ID)
brSLearnRTWide <- brSLearnRTWide[,2:6]
brSLearnRTWideScaled <- scale(brSLearnRTWide)
k2 <- kmeans(brSLearnRTWideScaled, centers = 2, nstart = 25)
set.seed(123)
# 2 is the optimal number
fviz_nbclust(brSLearnRTWide, kmeans, method = "wss")
fviz_cluster(k2, data = brSLearnRTWideScaled)
brSLearnRTWide %>%
mutate(cluster = k2$cluster) %>%
group_by(cluster) %>%
summarise_all("mean")
# mass
brMLearnRTWide <- brMLearnRT %>%
pivot_wider(names_from = keySwitch, values_from = meanRT) %>%
magrittr::set_rownames(.$ID)
brMLearnRTWide <- brMLearnRTWide[,2:6]
brMLearnRTWideScaled <- scale(brMLearnRTWide)
k2 <- kmeans(brMLearnRTWideScaled, centers = 2, nstart = 25)
set.seed(123)
# 2 is the optimal number - there's an outlier participant for switch 4
fviz_nbclust(brMLearnRTWide, kmeans, method = "gap_stat")
fviz_cluster(k2, data = brMLearnRTWideScaled)
brMLearnRTWide %>%
mutate(cluster = k2$cluster) %>%
group_by(cluster) %>%
summarise_all("mean")
# Is there a point at which people switch into this strategy?
# •	Where do errors occur? Is it the case that some key transitions are more tricky than others? Possibly the ones that take longer may cause more cognitive load resulting in more errors. Or it could be the case that the quicker ones are more prone to motor errors because they’re being typed faster.
brSLearnRTWideScaled
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
library(bookdown)
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
source("~/.active-rstudio-document", echo=TRUE)
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
install.packages("tinytex")
install.packages("tinytex")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
tinytex::install_tinytex()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown:::serve_book()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
